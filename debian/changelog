tuttle (0.6-1) UNRELEASED; urgency=medium

  * Access your protected resources by setting passwords in a .tuttlepass file
  * Dependency graph from left to right is easier to read than top to bottom
  * Logs can be accessed from report even if the process is not complete yet
  * Link in report to find definition of process that creates a resource
  * odbc resources and processor for handling any SQL database
  * ftp resources. Available for download processor
  * Download processor uses curl witch makes it more robusts for long downloads
  * Download processor can have multiple inputs, in order to ensure downloading in a subdirectory

 -- Lexman <tuttle@lexman.org>  Sun, 01 Apr 2018 17:00:00 +0200

tuttle (0.5-1) UNRELEASED; urgency=medium

  * TBD...
  * Run several processes in parallel with --jobs option.
  * Live logs : as soon as a line is complete it is displayed.
  * Don't stop at first error with --keep-going
  * --check-integrity option validates that no resource have changed since tuttle have produced them
  * Two processes without outputs can't have exactly the same inputs because we can't make the difference between them
  * Error message in report for failing (pre-)processes
  * Version in report and in dumps so we can remember with which tuttle the data was crafted
  * Interrupting tuttle with ^C will set running processes in error as aborted
  * Major refactoring of the invalidation system in order to make it easier to reason about
  * Only one call to exists() per resource and per run and no more than one call to signature(), because those calls can be long
  * Be sure to terminate every sub-process after running the workflow
  * Invalidation is now coherent for a processes without outputs : once it have succeeded, it won't run again
  * Fixed persistence of logs in the ``.tuttle`` directory when a process id changes (ie : when its position change in the tuttlefile)
  * --threshold now take into account duration of processes that don't create outputs
  * Running tuttle with a postgresql resource will fail with an explicit error message if it can't connect to the database instead of saying that resources don't exists

 -- Lexman <tuttle@lexman.org>  Sun, 06 Jul 2017 17:00:00 +0200


tuttle (0.4-1) UNRELEASED; urgency=medium

  * Preprocesses are run before the workflow is executed
  * Parametric processes can be added to a workflow with the new command ``tuttle-extend-workflow`` from a preprocesses
  * A new tutorial explains how to declare parametric processes in detail
  * Coma is DEPRECATED in favor of space to separate resources in dependency definitions
  * Docker image
  * Bugfixes

 -- Lexman <tuttle@lexman.org>  Thu, 01 Jun 2016 17:00:00 -0500

 
tuttle (0.3-1) UNRELEASED; urgency=medium

  * New "include" statement in order to split a tuttle project in several files
  * New PostgreSQL resource covering tables, views, functions and index
  * New PostgreSQL Processor
  * New https resources
  * New AWS s3 resources (experimental)
  * Better integration tests with external tool
  * A complete documentation referencing all available processors and resources
  * Fixed bug on install that required jinja2 even before running setup.py


 -- Lexman <tuttle@lexman.org>  Mon, 30 Nov 2015 09:04:00 +0700

tuttle (0.2-1) UNRELEASED; urgency=medium

  * File resources
  * SQLite tables, views, triggers and index resources
  * http resources
  * Pyton Processor
  * SQLite Processor
  * Tutorial   

 -- Lexman <tuttle@lexman.org>  Wed, 19 Aug 2015 15:09:48 +0200

tuttle (0.1-1) unstable; urgency=low

  * Initial release
  * Demonstration of development flow with tuttle commands

 -- Lexman <tuttle@lexman.org>  Fri, 22 May 2015 17:00:00 +0200

