#!/usr/bin/env python
# -*- coding: utf8 -*-

import sys
from os.path import abspath, dirname, join

if getattr(sys, 'frozen', False):
    # frozen
    tuttle_module = join(dirname(abspath(sys.executable)), '..', '..', 'tuttle')
else:
    # unfrozen
    tuttle_module = join(dirname(abspath(__file__)), '..', '..', 'tuttle')
sys.path.insert(0,tuttle_module)

from argparse import ArgumentParser
from tuttle.version import version
from tuttle.extend_workflow import extend_workflow, ExtendError
from os import environ


def main():
    parser = ArgumentParser(
        description="Extends a workflow by adding a templated tuttle project. Must be run from a preprocessor in a "
                    "tuttle project - version {}".format(version)
    )
    parser.add_argument("template", help="template file")
    parser.add_argument('variables', help='variables to insert into the template int the form my_var="my value"',
                        nargs="*")
    parser.add_argument('-n', '--name',
                        default='extension',
                        dest='name',
                        help='Name of the extended workflow')
    params = parser.parse_args()

    try:
        extend_workflow(params.template, params.variables, params.name, environ)
    except ExtendError as e:
        print e.message
        exit(1)


if __name__ == '__main__':
    sys.exit(main())